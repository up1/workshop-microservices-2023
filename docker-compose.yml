version: '3'
networks: 
    network-demo: 
services:
    order:
      build: 
        context: ./order
        dockerfile: Dockerfile_slow
      image: somkiat/order
      privileged: true
      user: root
      ports:
        - 8080:8080
      container_name: order-service
      networks:
        - network-demo
    
    inventory:
      build: ./inventory
      image: somkiat/inventory
      privileged: true
      user: root
      ports:
        - 4000:4000
      container_name: inventory-service
      environment:
        - PORT=4000
        - EXPORTER=zipkin
      networks:
        - network-demo
    
    ### Zipkin :: Distributed Tracing
    zipkin:
      image: openzipkin/zipkin
      ports:
        - "9411:9411"
      networks:
        - network-demo
    
    ### Prometheus and Grafana :: Application Metrics
    prometheus:
      image: prom/prometheus
      ports:
        - "9090:9090"
      volumes:
        - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      networks:
        - network-demo

    grafana:
      image: grafana/grafana-oss:8.5.2
      ports:
        - "3000:3000"
      volumes:
        - ./grafana/:/etc/grafana/provisioning
      networks:
        - network-demo

    tempo:
        image: grafana/tempo
        command: [ "-config.file=/etc/tempo.yaml" ]
        volumes:
            - ./grafana/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
        ports:
            - "14268"  # jaeger ingest
            # - "9411:9411" # zipkin
        networks:
          - network-demo

    loki:
        image: grafana/loki
        command: [ "-config.file=/etc/loki/local-config.yaml" ]
        ports:
            - "3100:3100"                                   # loki needs to be exposed so it receives logs
        environment:
            - JAEGER_AGENT_HOST=tempo
            - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
            - JAEGER_SAMPLER_TYPE=const
            - JAEGER_SAMPLER_PARAM=1
        networks:
          - network-demo
